{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.jsx","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","showErrorUrl","ChangeUniversalHandler","event","target","name","value","setState","testUrl","currentUrl","test","handlerSubmit","preventDefault","addMovie","props","isImgUrlTrue","isimdbUrlTrue","resetForm","this","newImdbUrl","onSubmit","required","placeholder","onChange","type","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6bb00160.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieCard.scss';\r\n\r\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    description: '',\n    showErrorUrl: false,\n  };\n\n  ChangeUniversalHandler = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  testUrl = (currentUrl) => {\n    // eslint-disable-next-line\n    const regularForUrlTest = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    return regularForUrlTest.test(currentUrl);\n  }\n\n  handlerSubmit = (event) => {\n    event.preventDefault();\n\n    const { addMovie } = this.props;\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      description,\n    } = this.state;\n\n    let isCorrectUrls = true;\n\n    const isImgUrlTrue = this.testUrl(imgUrl);\n    const isimdbUrlTrue = this.testUrl(imdbUrl);\n\n    isCorrectUrls = isImgUrlTrue && isimdbUrlTrue;\n\n    if (!isCorrectUrls) {\n      this.setState({ showErrorUrl: true });\n\n      return;\n    }\n\n    const newFilm = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    addMovie(newFilm);\n\n    this.resetForm();\n  }\n\n  resetForm = () => {\n    this.setState({\n      title: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      description: '',\n      showErrorUrl: false,\n    });\n  }\n\n  render() {\n    const {\n      title,\n      imgUrl,\n      newImdbUrl,\n      imdbId,\n      description,\n      showErrorUrl,\n    } = this.state;\n\n    return (\n      <>\n        <h1\n          className=\"form__title\"\n        >\n          Add new film\n        </h1>\n\n        {showErrorUrl\n        && (\n          <div\n            className=\"form__error\"\n          >\n            <h1>Invalid URL!</h1>\n            <p>Please write another One.</p>\n          </div>\n        )\n        }\n\n        <form\n          className=\"form\"\n          onSubmit={this.handlerSubmit}\n        >\n          <label>\n            Title:\n            <input\n              name=\"title\"\n              required\n              placeholder=\"Title\"\n              value={title}\n              onChange={this.ChangeUniversalHandler}\n            />\n          </label>\n\n          <label>\n            imgUrl:\n            <input\n              name=\"imgUrl\"\n              placeholder=\"imgUrl\"\n              value={imgUrl}\n              onChange={this.ChangeUniversalHandler}\n            />\n          </label>\n\n          <label>\n            imdbUrl:\n            <input\n              name=\"imdbUrl\"\n              placeholder=\"imdbUrl\"\n              value={newImdbUrl}\n              onChange={this.ChangeUniversalHandler}\n            />\n          </label>\n\n          <label>\n            imdbId:\n            <input\n              name=\"imdbId\"\n              required\n              placeholder=\"imdbId\"\n              value={imdbId}\n              onChange={this.ChangeUniversalHandler}\n            />\n          </label>\n          <textarea\n            name=\"description\"\n            placeholder=\"Description\"\n            className=\"form__text-area\"\n            value={description}\n            onChange={this.ChangeUniversalHandler}\n          />\n          <button\n            type=\"submit\"\n            className=\"form__button\"\n          >\n            ADD\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}